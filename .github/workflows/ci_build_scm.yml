name: CI test to build SCM

on: [push, pull_request]

jobs:
  build-linux:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fortran-compiler: [gfortran]
    env:
      NFHOME: /home/runner/netcdf-fortran
      LD_LIBRARY_PATH: /home/runner/netcdf-fortran/lib
      CC: gcc
      CXX: g++
      FC: gfortran
      BUILD_TYPE: Release
      BUILD_DIR: _build
      CMAKE_OPTIONS: >-
        -DCMAKE_BUILD_TYPE=Debug

    steps:

    ###############################################################################
    # Setup
    ###############################################################################

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Initialize submodules
      run: git submodule update --init --recursive
    
    - name: Set up Python 3.8.5
      uses: actions/setup-python@v3
      with:
        python-version: 3.8.5

    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH

    - name: Install f90nml
      run: conda install --yes -c conda-forge f90nml

    - name: Set compiler
      run: |
        echo "FC=gfortran-9" >> $GITHUB_ENV
        echo "CC=gcc-9" >> $GITHUB_ENV

    - name: Install NetCDF C library
      run: sudo apt-get install libnetcdf-dev

    - name: Install NetCDF Fortran library
      run: |
        git clone https://github.com/Unidata/netcdf-fortran.git --branch v4.4.4
        cd netcdf-fortran
        ./configure
        make -j
        sudo make install

    - name: Add NETCDF to LD_LIBRARY_PATH
      run: export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${NFHOME}/lib

    ###############################################################################
    #
    ###############################################################################
    - name: Install cmake
      run: pip3 install cmake ninja fypp

    - name: Configure build
      run: |
        cd /home/runner/work/ccpp-scm/ccpp-scm/scm/src
        cmake -B ${BUILD_DIR} -G Ninja
        -DCMAKE_INSTALL_PREFIX=${PWD}/_install
        ${CMAKE_OPTIONS}
