name: CI test to build SCM

on: [push, pull_request]

jobs:
  build-linux:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fortran-compiler: [gfortran]
    env:
      NFHOME: /home/runner/netcdf-fortran
      LD_LIBRARY_PATH: /home/runner/netcdf-fortran/lib
      DYLD_LIBRARY_PATH: /home/runner/netcdf-fortran/lib
      CC: gcc
      CXX: g++
      FC: gfortran
      CMAKE_C_COMPILER: gcc
      CMAKE_CXX_COMPILER: g++
      CMAKE_Fortran_COMPILER: gfortran
      CMAKE_Platform: ubuntu-latest.gnu

    steps:

    ###############################################################################
    # Setup
    ###############################################################################

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Initialize submodules
      run: git submodule update --init --recursive
    
    - name: Set up Python 3.8.5
      uses: actions/setup-python@v3
      with:
        python-version: 3.8.5

    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH

    - name: Install f90nml
      run: conda install --yes -c conda-forge f90nml

    - name: Install gfortran compiler
      run: sudo apt-get install gfortran

    - name: Install NetCDF C library
      run: sudo apt-get install libnetcdf-dev

    - name: Install NetCDF Fortran library
      run: |
        git clone https://github.com/Unidata/netcdf-fortran.git --branch v4.4.4
        cd netcdf-fortran
        ./configure --prefix=${NFHOME}
        make -j
        sudo make install

    - name: Add NETCDF to LD_LIBRARY_PATH
      run: export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${NFHOME}/lib

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    ###############################################################################
    #
    ###############################################################################

    - name: Run CMake
      run: |
        pwd
        mkdir -p scm/bin && cd scm/src
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} ../src
