name: CI checks for CCPP-SCM

on: [push, pull_request]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        fortran-compiler: [gfortran, ifort]
    env:
      F90: ${{ matrix.fortran-compiler }}
      FC: ${{ matrix.fortran-compiler }}
      F90FLAGS: "-O3 -ffree-line-length-none -fcheck=bounds -finit-real=nan"
      ATOL: 0.0
      RTOL: 0.0
      #KGO_VERSION: v001
      KGO_VERSION: v002
      NFHOME: /home/runner/netcdf-fortran
      LD_LIBRARY_PATH: /home/runner/netcdf-fortran/lib
    # Sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out repository under $GITHUB_WORKSPACE
    - uses: actions/checkout@v2

    ###############################################################################
    # Initial steps
    ###############################################################################
    # Set up Python and install dependencies
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        python-version: 3.7
    - name: Install python packages
      run: conda install --yes cartopy matplotlib netcdf4
    # Update system packages
    - name: Update system packages
      run: sudo apt-get update
    # Non compiler-specific environment
    - name: Non compiler-specific environment
      run: export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${NFHOME}/lib

    ###############################################################################
    # FORTRAN compilers
    ###############################################################################
    #
    # Install gfortran compiler
    #
    - name: Install gfortran compiler
      if: contains(matrix.fortran-compiler, 'gfortran')
      run: sudo apt-get install ${{ matrix.fortran-compiler }}
    #
    # Intel compilers
    #
    - name: cache-intel-compilers
      id: cache-intel-compilers
      if: contains(matrix.fortran-compiler, 'ifort')
      uses: actions/cache@v2
      with:
        path: /opt/intel
        key: intel-${{ runner.os }}-compilers-b

    # https://software.intel.com/content/www/us/en/develop/articles/installing-intel-oneapi-toolkits-via-apt.html
    # List of packages from Docler file at
    #    https://github.com/intel/oneapi-containers/blob/master/images/docker/hpckit-devel-ubuntu18.04/Dockerfile
    - name: Install Intel compilers and libraries
      if: contains(matrix.fortran-compiler, 'ifort') && steps.cache-intel-compilers.outputs.cache-hit != 'true'
      run: |
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
        sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
        sudo apt-get update
        sudo apt-get install intel-hpckit-getting-started intel-oneapi-clck intel-oneapi-common-licensing intel-oneapi-common-vars
        sudo apt-get install intel-oneapi-dev-utilities  intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic intel-oneapi-compiler-fortran intel-oneapi-itac

    ###############################################################################
    # Compiler-specific environment
    ###############################################################################
    # Environments for ifort and nvidia compilers
    - name: Environment for ifort compiler
      if: contains(matrix.fortran-compiler, 'ifort')
      run: |
        echo "CC=icx" > $GITHUB_ENV
        echo "FC=ifort" > $GITHUB_ENV
        echo "F90FLAGS=-O3 -heap-arrays" > $GITHUB_ENV

    ###############################################################################
    # NetCDF C and FORTRAN libraries
    ###############################################################################
    # NetCDF C library
    - name: Install NetCDF library
      run: sudo apt-get install libnetcdf-dev

    # Cache netcdf FORTRAN library
    - name: cache-netcdf-fortran
      id: cache-netcdf-fortran
      uses: actions/cache@v2
      with:
        path: /home/runner/netcdf-fortran
        key: netcdf-fortran-4.4.4a-${{ runner.os }}-${{ matrix.fortran-compiler }}-v02

    # Build NetCDF FORTRAN library for current compiler
    - name: Build NetCDF FORTRAN library
      env:
        FCFLAGS: -fPIC
      if: steps.cache-netcdf-fortran.outputs.cache-hit != 'true'
      run: |
        source /opt/intel/oneapi/setvars.sh || true
        ${F90} --version
        git clone https://github.com/Unidata/netcdf-fortran.git --branch v4.4.4
        cd netcdf-fortran
        ./configure --prefix=${NFHOME}
        make -j
        sudo make install

    ###############################################################################
    # Build SCM, download input data, and run regression tests.
    ###############################################################################
    - name: Build SCM
      run: |
        source /opt/intel/oneapi/setvars.sh || true
	mkdir scm/bin
	cd scm/bin
	cmake ../src
	make -j4